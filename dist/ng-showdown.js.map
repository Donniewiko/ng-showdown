{"version":3,"sources":["../src/ng-showdown.js"],"names":[],"mappings":";AAAA,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChC,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;AACjC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACxC,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,GAAG,CAAC;AAClC,IAAI,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC;AACpC,EAAE,CAAC,CAAC;AACJ,CAAC;AACD,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;AAC7F,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAC3E,CAAC;AACD,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;AACpB,CAAC;AACD,MAAM,MAAM,CAAC;AACb,QAAQ,CAAC,QAAQ,GAAG,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;AACzC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,uBAAuB,EAAE,CAAC;AACzF,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,eAAe,EAAE,CAAC;AACjD,CAAC;AACD,MAAM,GAAG,CAAC;AACV,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC1B,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;AAC/G,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;AACnH,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACvC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;AACvH,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,OAAO,EAAE,CAAC;AACV,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;AACD,QAAQ,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,UAAU,UAAU,CAAC,CAAC,GAAG,CAAC;AAC1B,UAAU,SAAS,CAAC,CAAC,IAAI,CAAC;AAC1B,QAAQ,EAAE,CAAC;AACX,CAAC;AACD,QAAQ,GAAG,CAAC;AACZ,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC;AACvC,SAAS,CAAC,CAAC;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;AACpD,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;AACxD,SAAS,EAAE,CAAC;AACZ,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACrC,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjD,UAAU,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AACD,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,QAAQ,EAAE,CAAC;AACX,CAAC;AACD,QAAQ,GAAG,CAAC;AACZ,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC;AAC1E,SAAS,CAAC,CAAC;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;AACxD,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1H,SAAS,EAAE,CAAC;AACZ,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1C,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC/B,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnB,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,UAAU,CAAC,CAAC;AACZ,QAAQ,EAAE,CAAC;AACX,CAAC;AACD,QAAQ,GAAG,CAAC;AACZ,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;AACtC,SAAS,CAAC,CAAC;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC;AAC3E,SAAS,EAAE,CAAC;AACZ,QAAQ,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AACxD,UAAU,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;AACjD,CAAC;AACD,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,QAAQ,EAAE,CAAC;AACX,CAAC;AACD,QAAQ,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC9B,UAAU,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;AAC1D,CAAC;AACD,UAAU,GAAG,CAAC;AACd,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,WAAW,CAAC,CAAC;AACb,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC;AAClF,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;AAClD,WAAW,EAAE,CAAC;AACd,UAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChD,YAAY,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACjD,UAAU,EAAE,CAAC;AACb,CAAC;AACD,UAAU,GAAG,CAAC;AACd,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7C,WAAW,CAAC,CAAC;AACb,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;AAClC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;AAC/B,WAAW,EAAE,CAAC;AACd,UAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7C,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC;AAC1D,UAAU,EAAE,CAAC;AACb,QAAQ,CAAC,CAAC;AACV,CAAC;AACD,QAAQ,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;AACnD,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,UAAU,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC;AACjC,QAAQ,EAAE,CAAC;AACX,MAAM,CAAC,CAAC;AACR,CAAC;AACD,MAAM,GAAG,CAAC;AACV,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC;AAC1D,OAAO,CAAC,CAAC;AACT,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACxB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACtD,OAAO,CAAC,CAAC;AACT,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC/C,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC;AACvC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;AACtB,OAAO,EAAE,CAAC;AACV,MAAM,QAAQ,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC;AACD,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/C,UAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtD,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAChD,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC;AAC7D,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACrB,cAAc,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACrC,YAAY,CAAC,CAAC;AACd,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAC/B,UAAU,GAAG,CAAC;AACd,QAAQ,EAAE,CAAC;AACX,CAAC;AACD,QAAQ,MAAM,CAAC,CAAC,CAAC;AACjB,UAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACzB,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACtB,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,YAAY,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;AACpC,UAAU,CAAC,CAAC;AACZ,QAAQ,EAAE,CAAC;AACX,MAAM,CAAC,CAAC;AACR,CAAC;AACD,MAAM,GAAG,CAAC;AACV,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACvD,OAAO,CAAC,CAAC;AACT,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC7B,OAAO,EAAE,CAAC;AACV,MAAM,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACnC,QAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,UAAU,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC;AACxD,QAAQ,EAAE,CAAC;AACX,MAAM,CAAC,CAAC;AACR,CAAC;AACD,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjE,CAAC;AACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACX,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACvH,EAAE,CAAC,CAAC;AACJ,CAAC;AACD,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC","file":"ng-showdown.js","sourcesContent":["(function (angular, showdown) {\r\n  // Conditional load for NodeJS\r\n  if (typeof require !== 'undefined') {\r\n    angular = require('angular');\r\n    showdown = require('showdown');\r\n  }\r\n\r\n  //Check if AngularJs and Showdown is defined and only load ng-Showdown if both are present\r\n  if (typeof angular !== 'undefined' && typeof showdown !== 'undefined') {\r\n\r\n    (function (module, showdown) {\r\n      'use strict';\r\n\r\n      module\r\n        .provider('$showdown', provider)\r\n        .directive('sdModelToHtml', ['$showdown', '$sanitize', markdownToHtmlDirective])\r\n        .filter('sdStripHtml', stripHtmlFilter);\r\n\r\n      /**\r\n       * Angular Provider\r\n       * Enables configuration of showdown via angular.config and Dependency Injection into controllers, views\r\n       * directives, etc... This assures the directives and filters provided by the library itself stay consistent\r\n       * with the user configurations.\r\n       * If the user wants to use a different configuration in a determined context, he can use the \"classic\" Showdown\r\n       * object instead.\r\n       */\r\n      function provider() {\r\n\r\n        // Configuration parameters for Showdown\r\n        var config = {\r\n          extensions: [],\r\n          stripHtml: true\r\n        };\r\n\r\n        /**\r\n         * Sets a configuration option\r\n         *\r\n         * @param {string} key Config parameter key\r\n         * @param {string} value Config parameter value\r\n         */\r\n        /* jshint validthis: true */\r\n        this.setOption = function (key, value) {\r\n          config[key] = value;\r\n\r\n          return this;\r\n        };\r\n\r\n        /**\r\n         * Gets the value of the configuration parameter specified by key\r\n         *\r\n         * @param {string} key The config parameter key\r\n         * @returns {string|null} Returns the value of the config parameter. (or null if the config parameter is not set)\r\n         */\r\n        this.getOption = function (key) {\r\n          if (config.hasOwnProperty(key)) {\r\n            return config.key;\r\n          } else {\r\n            return null;\r\n          }\r\n        };\r\n\r\n        /**\r\n         * Loads a Showdown Extension\r\n         *\r\n         * @param {string} extensionName The name of the extension to load\r\n         */\r\n        this.loadExtension = function (extensionName) {\r\n          config.extensions.push(extensionName);\r\n\r\n          return this;\r\n        };\r\n\r\n        function SDObject() {\r\n          var converter = new showdown.Converter(config);\r\n\r\n          /**\r\n           * Converts a markdown text into HTML\r\n           *\r\n           * @param {string} markdown The markdown string to be converted to HTML\r\n           * @returns {string} The converted HTML\r\n           */\r\n          this.makeHtml = function (markdown) {\r\n            return converter.makeHtml(markdown);\r\n          };\r\n\r\n          /**\r\n           * Strips a text of it's HTML tags\r\n           *\r\n           * @param {string} text\r\n           * @returns {string}\r\n           */\r\n          this.stripHtml = function (text) {\r\n            return String(text).replace(/<[^>]+>/gm, '');\r\n          };\r\n        }\r\n\r\n        // The object returned by service provider\r\n        this.$get = function () {\r\n          return new SDObject();\r\n        };\r\n      }\r\n\r\n      /**\r\n       * AngularJS Directive to Md to HTML transformation\r\n       *\r\n       * Usage example:\r\n       * <div sd-model-to-html=\"markdownText\" ></div>\r\n       *\r\n       * @param {showdown.Converter} $showdown\r\n       * @param {ngSanitize} $sanitize\r\n       * @returns {*}\r\n       */\r\n      function markdownToHtmlDirective($showdown, $sanitize) {\r\n\r\n        var link = function (scope, element) {\r\n          scope.$watch('model', function (newValue) {\r\n            var val;\r\n            if (typeof newValue === 'string') {\r\n              val = $sanitize($showdown.makeHtml(newValue));\r\n            } else {\r\n              val = typeof newValue;\r\n            }\r\n            element.html(val);\r\n          });\r\n        };\r\n\r\n        return {\r\n          restrict: 'A',\r\n          link: link,\r\n          scope: {\r\n            model: '=sdModelToHtml'\r\n          }\r\n        };\r\n      }\r\n\r\n      /**\r\n       * AngularJS Filter to Strip HTML tags from text\r\n       *\r\n       * @returns {Function}\r\n       */\r\n      function stripHtmlFilter() {\r\n        return function (text) {\r\n          return String(text).replace(/<[^>]+>/gm, '');\r\n        };\r\n      }\r\n\r\n    })(angular.module('ng-showdown', ['ngSanitize']), showdown);\r\n\r\n  } else {\r\n    throw new Error('ng-showdown was not loaded because one of its dependencies (AngularJS or Showdown) was not met');\r\n  }\r\n\r\n})(angular, showdown);\r\n"]}